name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        deno-version: [2.x]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Verify Deno installation
        run: deno --version

      - name: Check formatting
        run: deno fmt --check

      - name: Lint
        run: deno lint

      - name: Type check
        run: deno task type-check

      - name: Run tests
        run: deno task test

      - name: Generate coverage
        run: |
          deno task test:coverage
          deno task coverage

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          files: ./coverage.lcov
          flags: unittests
          name: codecov-umbrella

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: 2.x

      - name: Cache Deno dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/deno
          key: deno-${{ hashFiles('deno.lock') }}

      - name: Build server
        run: deno task build:server
        env:
          API_URL: http://localhost:8000/api

      - name: Test build artifacts
        run: |
          ls -lh dist/
          file dist/server
